stages:
  - validate
  - plan
  - apply
  - configure
  - add_worker

variables:
  TF_ROOT: ${CI_PROJECT_DIR}/terraform
  ANSIBLE_ROOT: ${CI_PROJECT_DIR}/ansible

cache:
  paths:
    - ${TF_ROOT}/.terraform

before_script:
  - yum update -y
  - yum install -y yum-utils
  - yum-config-manager --add-repo https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo
  - yum -y install terraform
  - yum -y install ansible
  - yum -y install python3-pip
  - pip3 install boto3
  - cd ${TF_ROOT}

validate:
  stage: validate
  script:
    - terraform init
    - terraform validate

plan:
  stage: plan
  script:
    - terraform plan -out=tfplan
  artifacts:
    paths:
      - ${TF_ROOT}/tfplan

apply:
  stage: apply
  script:
    - terraform apply -auto-approve tfplan
  dependencies:
    - plan

configure_cluster:
  stage: configure
  script:
    - cd ${TF_ROOT}
    - ansible-playbook -i inventory.py ../${ANSIBLE_ROOT}/k8s-master.yaml
    - ansible-playbook -i inventory.py ../${ANSIBLE_ROOT}/proxy_external.yaml
    - ansible-playbook -i inventory.py ../${ANSIBLE_ROOT}/proxy_internal.yaml
    - ansible-playbook -i inventory.py ../${ANSIBLE_ROOT}/monotoring.yaml
    - ansible-playbook -i inventory.py ../${ANSIBLE_ROOT}/logging.yaml
    - ansible-playbook -i inventory.py ../${ANSIBLE_ROOT}/mongodb.yaml

add_worker:
  stage: add_worker
  script:
    - cd ${TF_ROOT}
    - terraform apply -auto-approve -var="add_worker=true"
    - cd cd ${TF_ROOT}
    - ansible-playbook -i inventory.py ../${ANSIBLE_ROOT}/k8s-master.yaml
  when: manual
